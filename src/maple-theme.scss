/*!
 * maple-theme.scss
 * Author: Fonigle <www.fonigle.com>
 * Date: 2018/11/20
 * HomePage: theme.maple-ui.com
 */
@import './scss/variables.scss';
@import './scss/constant-type-list.scss';
@import './scss/constant-color-map.scss';

@import './scss/functions.scss';


// ====================================================================

$divide-positions: all top right bottom left;
$divide-styles: solid dashed dotted;
$levels: 1 2 3 4 5;
// =====================================================================

@for $i-brightness from 1 through length($brightnesses) {
    $brightness: nth($list:$brightnesses, $n:$i-brightness);

    .mp-#{$brightness} {

        // static colors
        @for $i-color-static from 1 through length($colors-static) {

            $color-type-static: nth($list:$colors-static, $n:$i-color-static);

            .mp-theme-color-#{$color-type-static} {
                color: calcColor($color-type-static, $brightness);
            }

            .mp-theme-color-hover-#{$color-type-static} {
                &:hover {
                    color: calcColor($color-type-static, $brightness);
                }
            }

            .mp-theme-color-active-#{$color-type-static} {
                &.active {
                    color: calcColor($color-type-static, $brightness);
                }
            }
        }

        // themepack colors
        @for $i-themepack from 1 through length(map-keys($mp-themepacks)) {

            //default or other custom
            $themepack: nth($list:map-keys($mp-themepacks), $n:$i-themepack);

            &.mp-theme-#{$themepack} {
                @for $i-color-themepack from 1 through length($colors-themepack) {
                    $color-type-themepack: nth($list:$colors-themepack, $n:$i-color-themepack);
                    $color-now: calcColor($color-type-themepack, $brightness, $themepack);

                    .mp-theme-color-#{$color-type-themepack} {
                        color: $color-now;
                    }

                    .mp-theme-color-hover-#{$color-type-themepack} {
                        &:hover {
                            color: $color-now;
                        }
                    }

                    .mp-theme-color-active-#{$color-type-themepack} {
                        &.active {
                            color: $color-now;
                        }
                    }

                }
            }
        }

        // static background-colors

        @for $i-background-static from 1 through length($backgrounds-static) {

            $background-type-static: nth($list:$backgrounds-static, $n:$i-background-static);

            .mp-theme-background-#{$background-type-static} {
                color: calcBackground($background-type-static, $brightness);
            }
        }

        @for $i-themepack from 1 through length(map-keys($mp-themepacks)) {
            $themepack: nth($list:map-keys($mp-themepacks), $n:$i-themepack);

            &.mp-theme-#{$themepack} {
                @for $i-background-themepack from 1 through length($backgrounds-themepack) {
                    $background-type-themepack: nth($list:$colors-themepack, $n:$i-background-themepack);
                    $background-now: calcColor($background-type-themepack, $brightness, $themepack);

                    .mp-theme-background-#{$background-type-themepack} {
                        background-color: $background-now;
                    }

                }
            }
        }
    }
}
